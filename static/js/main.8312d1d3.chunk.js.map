{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","onChange","event","target","value","rows","newText","toUpperCase","toLowerCase","txt","document","getElementById","select","navigator","clipboard","writeText","split","join","style","fontWeight","fontStyle","clr","color","name","backgroundColor","trim","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8312d1d3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes  from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/About\">About</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n             <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.mode==='light'?'dark':'light'}-mode`}</label>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes={\r\n  title:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps ={\r\n  title:'Set title here'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState(\"\");\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n    setText(newText);\r\n    }\r\n    const handleUpClick2=()=>{\r\n     let newText=text.toLowerCase();\r\n    setText(newText);\r\n    }\r\n    const handleOnChange=(event)=>{\r\n    setText(event.target.value);\r\n    }\r\n    const bold=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        txt.style.fontWeight=\"700\";\r\n    }\r\n    const normal=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        txt.style.fontWeight=\"400\";\r\n    }\r\n    const italic=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        txt.style.fontStyle=\"italic\";\r\n    }\r\n    const textNormal=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        txt.style.fontStyle=\"normal\";\r\n    }\r\n    \r\n    const color=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        const clr=document.getElementById(\"color\");\r\n        txt.style.color=clr.value;\r\n    }\r\n    const txtarbg=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        const clr=document.getElementById(\"color2\");\r\n        txt.style.backgroundColor=clr.value;\r\n    }\r\n    const handleClear=()=>{\r\n        const newText='';\r\n        setText(newText);\r\n    }\r\n    const handleCopy=()=>{\r\n        const txt=document.getElementById(\"myBox\");\r\n        txt.select();\r\n        navigator.clipboard.writeText(txt.value);\r\n      \r\n    }\r\n    const removeExtraSpaces=()=>{\r\n     \r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n<div className=\"mb-3\">\r\n  <h1 className={`text-${props.mode==='light'?'dark':'light'}`}>{props.heading} </h1>\r\n  <textarea className=\"form-control\" id=\"myBox\" onChange={handleOnChange} rows=\"8\" value={text}></textarea>\r\n</div>  \r\n<button className=\"btn btn-primary p-2\" onClick={handleUpClick}>ConvertToUppercase</button>    \r\n<button className=\"btn btn-primary p-2 m-2\" onClick={handleUpClick2}>ConvertToLoweCase</button>  \r\n<button className=\"btn btn-primary p-2 m-2\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary p-2 m-2\" onClick={handleClear}>Clear Text</button> \r\n<button className=\"btn btn-primary p-2 m-2\" onClick={removeExtraSpaces}>Remove Extra Spaces</button> \r\n<button className=\"btn btn-primary p-2 m-2\" onClick={bold}>Bold</button> \r\n<button className=\"btn btn-primary p-2 m-2\" onClick={normal}>Normal</button>\r\n<button className=\"btn btn-primary p-2 \" onClick={italic}>Italic</button>\r\n<button className=\"btn btn-primary p-2 m-2\" onClick={textNormal}>Normal_text</button>\r\n\r\n<button className=\"btn btn-primary p-2 m-2\" onChange={color}>\r\n<input type=\"color\" name=\"color\" id=\"color\" />Text_Color </button>\r\n<button className=\"btn btn-primary p-2 m-2\" onChange={txtarbg}>\r\n<input type=\"color\" name=\"color\" id=\"color2\" />Change_bg </button>\r\n\r\n \r\n</div>\r\n<div className={`container my-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n    <h1>Your text summary</h1>\r\n    <p><b>{text.trim().split(\" \").length }</b> words,<b>{text.length}</b> characters</p>\r\n    <p><b>{.008*text.split(\" \").length}</b> minutes to read</p>\r\n    <h3>Preview</h3>\r\n    <p>{text.length>0?text:\"Enter something in the text box to preview it here!\"}</p>\r\n</div>\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n              props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n                    \r\n               </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport React, { useState } from 'react'\n\nimport Navbar from './component/Navbar';\n import TextForm from './component/TextForm';\n import Alert from './component/Alert';\n//  import About from  './component/About';\n\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAlert= (message,type)=>{\nsetAlert({\n  msg:message,\n  type: type\n})\nsetTimeout(()=>{\n  setAlert(null);\n},1600)\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#223\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title=\"Text Util--Home dark mode\";\n      \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"rgb(221, 245, 210)\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title=\"Text Util--Home light mode\";\n    }\n  }\n  return (\n  <>\n \n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n\n<div className=\"container my-3\">\n<TextForm heading=\"Enter the text to analyze below\" mode={mode} />\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\">\n          <TextForm heading=\"Enter the text to analyze below\" mode={mode} />\n          </Route>\n        </Switch> */}\n</div>\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}